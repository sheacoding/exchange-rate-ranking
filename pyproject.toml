[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "exchange-rate-ranking"
version = "1.0.0"
description = "智能汇率兑换排行分析工具 - 实时查询全球汇率，分析人民币通过中间货币兑换美元的最优路径"
readme = "README.md"
license = "MIT"
requires-python = ">=3.8"
authors = [
    { name = "Exchange Rate Analyzer", email = "analyzer@example.com" }
]
keywords = ["exchange-rate", "currency", "forex", "analysis", "ranking"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial",
    "Topic :: Scientific/Engineering :: Information Analysis",
]

dependencies = [
    "requests>=2.31.0",
    "rich>=13.7.0",
    "click>=8.1.7",
    "python-dotenv>=1.0.0",
    "certifi>=2023.7.22",
    "urllib3>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
]

[project.scripts]
exchange-rate-ranking = "main:main"
era = "main:main"  # Short alias
era-test = "test_api:main"
era-benchmark = "benchmark:main"

[project.urls]
Homepage = "https://github.com/user/exchange-rate-ranking"
Documentation = "https://github.com/user/exchange-rate-ranking#readme"
Repository = "https://github.com/user/exchange-rate-ranking.git"
Issues = "https://github.com/user/exchange-rate-ranking/issues"

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Gradual typing
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "network: marks tests that require network access",
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "venv/*",
    ".venv/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
